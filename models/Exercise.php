<?php

namespace app\models;

use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "exercise".
 *
 * @property integer $id
 * @property string $title
 * @property string $description
 * @property string $image
 * @property integer $viewed
 * @property integer $status
 */
class Exercise extends \yii\db\ActiveRecord
{
    public $muscles_array;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'exercise';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'description', 'status', 'image'], 'required'],
            [['description'], 'string'],
            [['viewed', 'status'], 'integer'],
            //['image', 'image', 'extensions' => 'png, jpg, gif'],
            [['title',], 'string', 'max' => 255],
            [['muscles_array'], 'safe'],

        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Название',
            'description' => 'Описание',
            'image' => 'Картинка',
            'viewed' => 'Просмотров',
            'status' => 'Статус',
            'muscles_array' => 'Мышцы',
        ];
    }

    public function getMuscles()
    {
        return $this->hasMany(Muscle::className(), ['id' => 'muscle_id'])
            ->viaTable('exercise_muscle', ['exercise_id' => 'id']);
    }

    public function getSelectedMuscle()
    {
        $arraySelectedMuscle = $this->getMuscles()->select('id')->asArray()->all();
        return $SelectedMuscle = ArrayHelper::getColumn($arraySelectedMuscle, 'id');
    }

    public function afterFind()
    {
        $this->muscles_array = $this->getSelectedMuscle();
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        $arr = ArrayHelper::map($this->muscles, 'id','id');
        if ($this->muscles_array == NULL)
        {
            ExerciseMuscle::deleteAll(['muscle_id' => $arr]);
        } else {
            foreach ($this->muscles_array as $one) {
                if (!in_array($one, $arr)) {
                    $model = new ExerciseMuscle();
                    $model->exercise_id = $this->id;
                    $model->muscle_id = $one;
                    $model->save();
                }
                if (isset($arr[$one]))
                {
                    unset($arr[$one]);
                }
            }
            ExerciseMuscle::deleteAll(['muscle_id' => $arr]);
        }

    }

}
